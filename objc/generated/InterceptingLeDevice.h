//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/gijsvanveen/projects/Tacx-unified/LeBlue/LeBlue-java/src/main/java/houtbecke/rs/le/interceptor/InterceptingLeDevice.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_InterceptingLeDevice")
#ifdef RESTRICT_InterceptingLeDevice
#define INCLUDE_ALL_InterceptingLeDevice 0
#else
#define INCLUDE_ALL_InterceptingLeDevice 1
#endif
#undef RESTRICT_InterceptingLeDevice

#if !defined (InterceptingLeDevice_) && (INCLUDE_ALL_InterceptingLeDevice || defined(INCLUDE_InterceptingLeDevice))
#define InterceptingLeDevice_

#define RESTRICT_LeIntercepting 1
#define INCLUDE_LeIntercepting 1
#include "LeIntercepting.h"

#define RESTRICT_LeDevice 1
#define INCLUDE_LeDevice 1
#include "LeDevice.h"

@class IOSObjectArray;
@class LeInterceptor;
@protocol LeDeviceListener;

@interface InterceptingLeDevice : LeIntercepting < LeDevice > {
 @public
  id<LeDevice> leDevice_;
}

#pragma mark Public

- (instancetype)initWithLeDevice:(id<LeDevice>)leDevice
               withLeInterceptor:(LeInterceptor *)leInterceptor;

- (void)addListenerWithLeDeviceListener:(id<LeDeviceListener>)listener;

- (jboolean)checkBleHardwareAvailable;

- (jboolean)isEqual:(id)o;

- (NSUInteger)hash;

- (jboolean)isBtEnabled;

- (void)removeListenerWithLeDeviceListener:(id<LeDeviceListener>)listener;

- (void)startScanning;

- (void)startScanningWithJavaUtilUUIDArray:(IOSObjectArray *)uuids;

- (void)stopScanning;

@end

J2OBJC_EMPTY_STATIC_INIT(InterceptingLeDevice)

J2OBJC_FIELD_SETTER(InterceptingLeDevice, leDevice_, id<LeDevice>)

FOUNDATION_EXPORT void InterceptingLeDevice_initWithLeDevice_withLeInterceptor_(InterceptingLeDevice *self, id<LeDevice> leDevice, LeInterceptor *leInterceptor);

FOUNDATION_EXPORT InterceptingLeDevice *new_InterceptingLeDevice_initWithLeDevice_withLeInterceptor_(id<LeDevice> leDevice, LeInterceptor *leInterceptor) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT InterceptingLeDevice *create_InterceptingLeDevice_initWithLeDevice_withLeInterceptor_(id<LeDevice> leDevice, LeInterceptor *leInterceptor);

J2OBJC_TYPE_LITERAL_HEADER(InterceptingLeDevice)

@compatibility_alias HoutbeckeRsLeInterceptorInterceptingLeDevice InterceptingLeDevice;

#endif

#pragma pop_macro("INCLUDE_ALL_InterceptingLeDevice")
